{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3ded1eae_ad53db06",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1008672
      },
      "writtenOn": "2021-02-10T21:59:51Z",
      "side": 1,
      "message": "Verified on hw-offload env.",
      "revId": "93cd033d6e3cddea26ccc4cb389e53a16a313d99",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "422b68ab_1d97d86b",
        "filename": "nfv_tempest_plugin/tests/scenario/manager_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 1116,
      "author": {
        "id": 1008484
      },
      "writtenOn": "2021-02-11T07:35:27Z",
      "side": 1,
      "message": "You already have a method to discover Mellanox NICS \nPlease refer this\n\nhttps://github.com/redhat-openstack/nfv-tempest-plugin/blob/master/nfv_tempest_plugin/tests/scenario/test_nfv_sriov_usecases.py#L415-L419\n\n\nThe above one search for SRIOV NICS,\nI would suggest, check computes have Mellanox SRIOV, based on compute\nAnd then find what needed, hw-offload, regular min-bw SRIOV",
      "range": {
        "startLine": 1116,
        "startChar": 8,
        "endLine": 1116,
        "endChar": 33
      },
      "revId": "93cd033d6e3cddea26ccc4cb389e53a16a313d99",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7db00b4a_b7fca7de",
        "filename": "nfv_tempest_plugin/tests/scenario/manager_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 1116,
      "author": {
        "id": 1008672
      },
      "writtenOn": "2021-02-11T09:26:57Z",
      "side": 1,
      "message": "I can\u0027t use the search lines from the \"test_sriov_min_qos\" because of 3 reasons.\n\n1) The whitelist in nova.conf in hw-offload deployment does not have a \"ConnectX\\-5\\\" regex.\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n[pci]\n\n#\n# From nova.conf\n#\n\n#\n# An alias for a PCI passthrough device requirement. For more information, refer\n# to the documentation. (multi valued)\n# Deprecated group;name - DEFAULT;pci_alias\n#alias \u003d\n\n#\n# White list of PCI devices available to VMs. For more information, refer to the\n# documentation. (multi valued)\n# Deprecated group;name - DEFAULT;pci_passthrough_whitelist\n#passthrough_whitelist \u003d\npassthrough_whitelist\u003d{\"devname\":\"enp4s0f0\",\"physical_network\":\"mx-network\",\"trusted\":\"true\"}\npassthrough_whitelist\u003d{\"devname\":\"enp4s0f1\",\"physical_network\":\"mx-network\",\"trusted\":\"true\"}\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\n2) Is more important. Since I\u0027m looking for offloaded interfaces, I\u0027m checking the driver of the interface.\nI\u0027m looking for the \"mlx5e_rep\" dirver:\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n[root@computeovshwoffload-0 ~]# ethtool -i enp4s0f0 | grep driver\ndriver: mlx5e_rep\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nWhile in other deployments, the driver that is use is - \"mlx5_core\"\n\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n[root@computeovndpdksriov-0 ~]# ethtool -i enp4s0f0 | grep driver\ndriver: mlx5_core\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\n3) I\u0027m checking that the interface has the following attribute:\n\"hw-tc-offload\": \"on\"\n\n\nSo, I\u0027m not looking for the mellanox interfaces.\nI\u0027m looking for the offload interfaces.\nThis method is different than the one you mentioned.",
      "parentUuid": "422b68ab_1d97d86b",
      "range": {
        "startLine": 1116,
        "startChar": 8,
        "endLine": 1116,
        "endChar": 33
      },
      "revId": "93cd033d6e3cddea26ccc4cb389e53a16a313d99",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cea84586_89f12b49",
        "filename": "nfv_tempest_plugin/tests/scenario/manager_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 1116,
      "author": {
        "id": 1008484
      },
      "writtenOn": "2021-02-11T11:25:24Z",
      "side": 1,
      "message": "\u003e I can\u0027t use the search lines from the \"test_sriov_min_qos\" because of 3 reasons.\n\u003e \n\u003e 1) The whitelist in nova.conf in hw-offload deployment does not have a \"ConnectX\\-5\\\" regex.\n\u003e \n\u003e \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\u003e [pci]\n\u003e \n\u003e #\n\u003e # From nova.conf\n\u003e #\n\u003e \n\u003e #\n\u003e # An alias for a PCI passthrough device requirement. For more information, refer\n\u003e # to the documentation. (multi valued)\n\u003e # Deprecated group;name - DEFAULT;pci_alias\n\u003e #alias \u003d\n\u003e \n\u003e #\n\u003e # White list of PCI devices available to VMs. For more information, refer to the\n\u003e # documentation. (multi valued)\n\u003e # Deprecated group;name - DEFAULT;pci_passthrough_whitelist\n\u003e #passthrough_whitelist \u003d\n\u003e passthrough_whitelist\u003d{\"devname\":\"enp4s0f0\",\"physical_network\":\"mx-network\",\"trusted\":\"true\"}\n\u003e passthrough_whitelist\u003d{\"devname\":\"enp4s0f1\",\"physical_network\":\"mx-network\",\"trusted\":\"true\"}\n\u003e \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\u003e \nCorrect, it should not\n\nIn case of no Mellanox nic/driver test should not run. as per now\nI am not going to argue here, i am trying to bring into the awareness\n\nthat there are parts of code, could be chunked together\nAny way the two cents could be take here,\n\nIs splitting this method, a bit, whether it is nic/driver or hardware.\nThat could be reused later on.\n\nMaybe to add TODO comment in the other test, once this patch is merged.\nI hope you can understand my point here.\n\n\n\u003e 2) Is more important. Since I\u0027m looking for offloaded interfaces, I\u0027m checking the driver of the interface.\n\u003e I\u0027m looking for the \"mlx5e_rep\" dirver:\n\u003e \n\nsee above ^^\n\n\u003e \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\u003e [root@computeovshwoffload-0 ~]# ethtool -i enp4s0f0 | grep driver\n\u003e driver: mlx5e_rep\n\u003e \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\u003e \n\u003e While in other deployments, the driver that is use is - \"mlx5_core\"\n\u003e \n\u003e \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\u003e [root@computeovndpdksriov-0 ~]# ethtool -i enp4s0f0 | grep driver\n\u003e driver: mlx5_core\n\u003e \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\nThat is a good point, maybe we should move into driver search\nAnd add some TODO in other test we could use it?\n\nThis could bring you to try move the driver search to different utility?\n\n\u003e \n\u003e 3) I\u0027m checking that the interface has the following attribute:\n\u003e \"hw-tc-offload\": \"on\"\n\u003e \n\u003e \n\u003e So, I\u0027m not looking for the mellanox interfaces.\n\u003e I\u0027m looking for the offload interfaces.\n\u003e This method is different than the one you mentioned.",
      "parentUuid": "7db00b4a_b7fca7de",
      "range": {
        "startLine": 1116,
        "startChar": 8,
        "endLine": 1116,
        "endChar": 33
      },
      "revId": "93cd033d6e3cddea26ccc4cb389e53a16a313d99",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6f7e80c_51757b68",
        "filename": "nfv_tempest_plugin/tests/scenario/manager_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 1116,
      "author": {
        "id": 1016438
      },
      "writtenOn": "2021-02-11T11:52:07Z",
      "side": 1,
      "message": "It might be beneficial to have a generic function which can query interfaces and return information such as drivers and other info generated by output (imagine that an dictionary is created where every key is mapped to an entry with a value from command).\n\nNot sure if this is in the scope of this patch.",
      "parentUuid": "cea84586_89f12b49",
      "range": {
        "startLine": 1116,
        "startChar": 8,
        "endLine": 1116,
        "endChar": 33
      },
      "revId": "93cd033d6e3cddea26ccc4cb389e53a16a313d99",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29cada16_5b5319fa",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_offload.py",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1008484
      },
      "writtenOn": "2021-02-11T07:35:27Z",
      "side": 1,
      "message": "The default is, discovery\nMy two cents, config should be read after discovery returned empty result.\n\nIs there really a use case for overriding discovery?",
      "range": {
        "startLine": 81,
        "startChar": 7,
        "endLine": 81,
        "endChar": 59
      },
      "revId": "93cd033d6e3cddea26ccc4cb389e53a16a313d99",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c2cd88a_918d0d49",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_offload.py",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1008672
      },
      "writtenOn": "2021-02-11T09:26:57Z",
      "side": 1,
      "message": "I don\u0027t know if there is a use case for overriding discovery.\nI\u0027m just giving the option.\n\nIf the user would like to provide the offload nics, they will be used.\nOtherwise, they will be discovered from the system.",
      "parentUuid": "29cada16_5b5319fa",
      "range": {
        "startLine": 81,
        "startChar": 7,
        "endLine": 81,
        "endChar": 59
      },
      "revId": "93cd033d6e3cddea26ccc4cb389e53a16a313d99",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ad70c41_38f7648b",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_offload.py",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1016438
      },
      "writtenOn": "2021-02-11T11:52:07Z",
      "side": 1,
      "message": "The use case to override discovery is to explicitly test a single or specific NICs instead of all NICs. While as a default this will not be the optimal behavior, it is good to have the option.",
      "parentUuid": "3c2cd88a_918d0d49",
      "range": {
        "startLine": 81,
        "startChar": 7,
        "endLine": 81,
        "endChar": 59
      },
      "revId": "93cd033d6e3cddea26ccc4cb389e53a16a313d99",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}