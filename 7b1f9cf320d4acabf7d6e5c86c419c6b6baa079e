{
  "comments": [
    {
      "key": {
        "uuid": "35683244_d4103aec",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1008484
      },
      "writtenOn": "2020-02-13T13:35:46Z",
      "side": 1,
      "message": "Hi Max\nI would like to suggest a change in test steps to reduce time of execution:\n\n- Boot 2 cpu instances on the 1st hypervisor\n- Live migrate 1 VM to second hypervisor,\n  This way you could maintain steps 1 \u0026 2 in the comment, but you already have 2 guests installed\n- Live migrate back st instance and verify",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 18,
        "endChar": 71
      },
      "revId": "7b1f9cf320d4acabf7d6e5c86c419c6b6baa079e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ef97269_241111f4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1008672
      },
      "writtenOn": "2020-02-13T13:44:14Z",
      "side": 1,
      "message": "The whole point of the test is to verify the behavior of the test like it present now.\n\nThe reason for it, is that the feature of the pinned instance is to reschedule the cores allocation for the instance.\n\nBy default, when I\u0027m booting the instance, it gets core allocation from the controller. When I migrate the instance to the second hypervisor and then migrate it back to the first hypervisor, the instance will take back the same cores that controller allocated to it during the spawning.\n\nWhen I\u0027m migrating the first instance to the second hypervisor, it releases the conres it used and they are taken by the second spawned instance.\n\nSo the whole point of the feature is to ensure that when the first instance migrated back to the first hypervisor, controller is able to re-schedule the cores allocation and provide free cores instead of the cores that were used while spawning.\n\nThat is something that was not supported in the previous versions.\n\nThe following BZ talk especially about that:\nhttps://bugzilla.redhat.com/show_bug.cgi?id\u003d1222414\n\nNote the comment number 68.",
      "parentUuid": "35683244_d4103aec",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 18,
        "endChar": 71
      },
      "revId": "7b1f9cf320d4acabf7d6e5c86c419c6b6baa079e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4044e58c_5d871653",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1008484
      },
      "writtenOn": "2020-02-13T14:28:24Z",
      "side": 1,
      "message": "OK, thanks\nPlease add short explanation for the reason of this scenario",
      "parentUuid": "2ef97269_241111f4",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 18,
        "endChar": 71
      },
      "revId": "7b1f9cf320d4acabf7d6e5c86c419c6b6baa079e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70ed2db7_af2717c2",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_advanced_usecases.py",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1010167
      },
      "writtenOn": "2020-02-11T05:33:05Z",
      "side": 1,
      "message": "Instead, if the name or IP of the hypervisor is logged, it is would be helpful in debugging.",
      "range": {
        "startLine": 180,
        "startChar": 43,
        "endLine": 180,
        "endChar": 48
      },
      "revId": "7b1f9cf320d4acabf7d6e5c86c419c6b6baa079e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0af67d9_9052a032",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_advanced_usecases.py",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1008484
      },
      "writtenOn": "2020-02-13T14:49:17Z",
      "side": 1,
      "message": "+1 \nconsider using the following:\nsrv1[0][\u0027hypervisor_name\u0027]",
      "parentUuid": "70ed2db7_af2717c2",
      "range": {
        "startLine": 180,
        "startChar": 43,
        "endLine": 180,
        "endChar": 48
      },
      "revId": "7b1f9cf320d4acabf7d6e5c86c419c6b6baa079e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "442e9ea7_4d865d7d",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_advanced_usecases.py",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 1010167
      },
      "writtenOn": "2020-02-11T05:33:05Z",
      "side": 1,
      "message": "How to ensure that the server is migrated to a different hypervisor?",
      "revId": "7b1f9cf320d4acabf7d6e5c86c419c6b6baa079e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ada837a_e6fe68cd",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_advanced_usecases.py",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 1008484
      },
      "writtenOn": "2020-02-13T14:49:17Z",
      "side": 1,
      "message": "+1 \nConsider checking the the srv1[0][\u0027hypervisor_ip\u0027] !\u003d provious hypervisor",
      "parentUuid": "442e9ea7_4d865d7d",
      "revId": "7b1f9cf320d4acabf7d6e5c86c419c6b6baa079e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06ec8394_9b9db761",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_advanced_usecases.py",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 1008484
      },
      "writtenOn": "2020-02-13T14:49:17Z",
      "side": 1,
      "message": "Did you forget verifying connectivity?\nlike below?\nself.check_instance_connectivity(ip_addr\u003dsrv1[0][\u0027fip\u0027],\n                                         user\u003dself.instance_user,\n                                         key_pair\u003dkey_pair[\u0027private_key\u0027])",
      "range": {
        "startLine": 185,
        "startChar": 8,
        "endLine": 185,
        "endChar": 66
      },
      "revId": "7b1f9cf320d4acabf7d6e5c86c419c6b6baa079e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}