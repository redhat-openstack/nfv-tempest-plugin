{
  "comments": [
    {
      "key": {
        "uuid": "5727ce2f_d07e815e",
        "filename": "docs/tests.md",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 1016373
      },
      "writtenOn": "2020-05-12T15:20:17Z",
      "side": 1,
      "message": "wouldnt it be better to fail if something is missing?\nWhat I see is that we have 2 different tests with the same name. If for example the test pass, we do not know if the \"non numa aware\" was tested or not",
      "range": {
        "startLine": 297,
        "startChar": 78,
        "endLine": 297,
        "endChar": 79
      },
      "revId": "e3290f86ef0edec74e6f5ee937c76abb6ef93d86",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cf6c34a_ad768ff8",
        "filename": "docs/tests.md",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 1008672
      },
      "writtenOn": "2020-05-12T15:34:36Z",
      "side": 1,
      "message": "For me, testing the non_numa_aware step of the test, is a \"nice to have\".\nI\u0027m still testing the numa aware feature, including the migration.\nSo for me, it\u0027s not a problem, if the non numa aware network will not be available.",
      "parentUuid": "5727ce2f_d07e815e",
      "range": {
        "startLine": 297,
        "startChar": 78,
        "endLine": 297,
        "endChar": 79
      },
      "revId": "e3290f86ef0edec74e6f5ee937c76abb6ef93d86",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34484ec0_98899da6",
        "filename": "docs/tests.md",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 1008484
      },
      "writtenOn": "2020-05-12T16:38:20Z",
      "side": 1,
      "message": "+1 nieto\nsee my next comment in the test itself",
      "parentUuid": "8cf6c34a_ad768ff8",
      "range": {
        "startLine": 297,
        "startChar": 78,
        "endLine": 297,
        "endChar": 79
      },
      "revId": "e3290f86ef0edec74e6f5ee937c76abb6ef93d86",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1865cde4_ad01b646",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_advanced_usecases.py",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1016373
      },
      "writtenOn": "2020-05-12T15:20:17Z",
      "side": 1,
      "message": "should we take \u00276\u0027 from flavor or configuration?",
      "range": {
        "startLine": 67,
        "startChar": 61,
        "endLine": 67,
        "endChar": 62
      },
      "revId": "e3290f86ef0edec74e6f5ee937c76abb6ef93d86",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5fe0a2c_8c221add",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_advanced_usecases.py",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1008672
      },
      "writtenOn": "2020-05-12T15:34:36Z",
      "side": 1,
      "message": "That\u0027s a good idea.\nWill implement it.",
      "parentUuid": "1865cde4_ad01b646",
      "range": {
        "startLine": 67,
        "startChar": 61,
        "endLine": 67,
        "endChar": 62
      },
      "revId": "e3290f86ef0edec74e6f5ee937c76abb6ef93d86",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78a1b2d1_49c65bf3",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_advanced_usecases.py",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1008484
      },
      "writtenOn": "2020-05-12T16:38:20Z",
      "side": 1,
      "message": "Please correct me if i am wrong\nSo as mentioned in other comment, it is two tests.\nEither the test is:\n1) numas_phys.get(\u0027non_numa_aware_net\u0027):\n2) numas_phys[\u0027numa_aware_net\u0027][\u0027numa_node\u0027])\n\nso you know that in advance, before test starts\nfrom line 66 you already know that but you are failing the test in case it is not exist.\n\nWhat is the use case here? in line 180? and 184? \nAs mentioned it should be different tests\n\nI think you should take the whole code till line 184 and call from two different tests",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 104,
        "endChar": 48
      },
      "revId": "e3290f86ef0edec74e6f5ee937c76abb6ef93d86",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b60940c7_fa7e03c1",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_advanced_usecases.py",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1008672
      },
      "writtenOn": "2020-05-13T05:44:31Z",
      "side": 1,
      "message": "I think you gave the wrong line numbers.\nBut in any case, let me explain from what I see.\n\nThe test has three steps:\n1) Fill up numa aware numa node and boot up another instance to ensure it fails.\n2) Boot another instance from the non numa aware network to ensure is boot successfully.\n3) Live migrate the first numa aware instance to ensure the migration works properly with the numa aware feature.\n\nI made this one single test because it is not efficient to separate it a different tests.\nThe reason for this is that every piece of the test require to make the phase 1.\nSo if the test is split, you are actually retesting the first step over and over again.\n\nI can make the phase 2 mandatory within the same test, but it has no reason to split it as in that case we will make a duplication.\n\nWe already spoke about it when I wrote the test from the beginning.",
      "parentUuid": "78a1b2d1_49c65bf3",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 104,
        "endChar": 48
      },
      "revId": "e3290f86ef0edec74e6f5ee937c76abb6ef93d86",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66a53402_46d24b51",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_advanced_usecases.py",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1016373
      },
      "writtenOn": "2020-05-12T15:20:17Z",
      "side": 1,
      "message": "should we check numa node in this second hypervisor?",
      "range": {
        "startLine": 140,
        "startChar": 8,
        "endLine": 140,
        "endChar": 12
      },
      "revId": "e3290f86ef0edec74e6f5ee937c76abb6ef93d86",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "751b7a33_208a3f61",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_advanced_usecases.py",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1008672
      },
      "writtenOn": "2020-05-12T15:34:36Z",
      "side": 1,
      "message": "I think that is not important.\nIf the non numa aware instance, were able to spawn and boot, in mean the numa aware feature works as expected and doesn\u0027t block the whole system.\nThe numa node placement is not so important here.",
      "parentUuid": "66a53402_46d24b51",
      "range": {
        "startLine": 140,
        "startChar": 8,
        "endLine": 140,
        "endChar": 12
      },
      "revId": "e3290f86ef0edec74e6f5ee937c76abb6ef93d86",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}