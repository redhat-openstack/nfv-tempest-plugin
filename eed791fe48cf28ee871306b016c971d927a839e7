{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "65635eae_e4826e72",
        "filename": "nfv_tempest_plugin/config.py",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1008484
      },
      "writtenOn": "2021-02-10T20:04:34Z",
      "side": 1,
      "message": "I would assume defaults here. \nThere is no meaning for that, default should help tester to understand\nthe configuration",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 125,
        "endChar": 54
      },
      "revId": "eed791fe48cf28ee871306b016c971d927a839e7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc654351_a292c5ef",
        "filename": "nfv_tempest_plugin/config.py",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1008672
      },
      "writtenOn": "2021-02-11T06:52:01Z",
      "side": 1,
      "message": "I will explain my view of these defaults.\n\nBy default, when these values are empty, test will discover automatically the bond name and bond ports (just one bond).\nIn our current deployment, we have just one single ovs-dpdk bond, so that is not a problem.\n\nBut if we will face a setup that has multiple ovs-dpdk bonds, maybe we will want to specify one specific bond to be tested. And here defaults parameters will come to help and allow to specify the exact bond for testing.",
      "parentUuid": "65635eae_e4826e72",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 125,
        "endChar": 54
      },
      "revId": "eed791fe48cf28ee871306b016c971d927a839e7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1d3e4ed_fb86e330",
        "filename": "nfv_tempest_plugin/config.py",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1008484
      },
      "writtenOn": "2021-02-11T07:45:58Z",
      "side": 1,
      "message": "\u003e I will explain my view of these defaults.\n\u003e \n\u003e By default, when these values are empty, test will discover automatically the bond name and bond ports (just one bond).\n\u003e In our current deployment, we have just one single ovs-dpdk bond, so that is not a problem.\n\u003e \n\u003e But if we will face a setup that has multiple ovs-dpdk bonds, maybe we will want to specify one specific bond to be tested. And here defaults parameters will come to help and allow to specify the exact bond for testing.\n\nMHO. opinion each test and its need, question, is did we test this? \nAs per now, my 2 cents, avoid empty configurations, once some one will have the need, it will be added with test for that, i would like to hear others, on that",
      "parentUuid": "dc654351_a292c5ef",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 125,
        "endChar": 54
      },
      "revId": "eed791fe48cf28ee871306b016c971d927a839e7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d124871_426fba4f",
        "filename": "nfv_tempest_plugin/config.py",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1016438
      },
      "writtenOn": "2021-02-11T12:03:46Z",
      "side": 1,
      "message": "I also do not like empty test configuration honestly, but setting a hard coded default is not beneficial because bond name and in general bond configuration is not \u0027generic\u0027 enough and may cause issues.\n\nIn my opinion this is not something like a network setting where you can just set an arbitrary IP address range and normal bonding type (what is done in Neutron config).\n\nMaybe maybe (I am not sure it is wise), we could work with None type objects or something in those scenarios?",
      "parentUuid": "e1d3e4ed_fb86e330",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 125,
        "endChar": 54
      },
      "revId": "eed791fe48cf28ee871306b016c971d927a839e7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "387d9dca_752a27c4",
        "filename": "nfv_tempest_plugin/config.py",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1008484
      },
      "writtenOn": "2021-02-11T16:10:18Z",
      "side": 1,
      "message": "Clearing my point, i think it is not clear,\nhttps://review.gerrithub.io/c/redhat-openstack/nfv-tempest-plugin/+/510557/1/nfv_tempest_plugin/tests/scenario/test_nfv_lacp_usecases.py#140\n\nnot bonding_dict.get(\u0027bond_name\u0027)\nso if it is, good, if it not in config it is ok.\n\n\nhelp should give a clue on the parameter\ninstead of that:\n\nhelp\u003d\u0027Balance TCP test configuration. \u0027\n\u0027By default, gathered automatically\u0027),",
      "parentUuid": "9d124871_426fba4f",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 125,
        "endChar": 54
      },
      "revId": "eed791fe48cf28ee871306b016c971d927a839e7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8462800d_1e9149aa",
        "filename": "nfv_tempest_plugin/config.py",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1007976
      },
      "writtenOn": "2021-02-13T06:49:12Z",
      "side": 1,
      "message": "Today inside the code, we do not have support for multiple dpdk bonds, or do we have it? I am not sure, if we have support for multiple dpdk ports, it makes it important, that here, we should be able to chose a comma separated list of bonds and not just one bond.",
      "parentUuid": "387d9dca_752a27c4",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 125,
        "endChar": 54
      },
      "revId": "eed791fe48cf28ee871306b016c971d927a839e7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ddc10e8_af1fa8f4",
        "filename": "nfv_tempest_plugin/config.py",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1008672
      },
      "writtenOn": "2021-02-14T08:36:10Z",
      "side": 1,
      "message": "Sanjay,\n\nYes, currently we do not have support for multiple bonds in our codebase.\n\nVadim suggested a nice solution.\n\n* The test will lookup for all available bonds on hypervisor.\n* Then, it will use the lacp bond configuration and check it within the bonds:\n\nDpdkBondInterfaceOvsOptions: \"bond_mode\u003dbalance-tcp lacp\u003dactive other_config:lacp-time\u003dfast other-config:lacp-fallback-ab\u003dtrue\"\n\n* Once lacp configuration will be discovered on specific bond or bonds, this bond or bonds will be tested.\n\nIn such, we even do not need any extra configuration for the test.\n\nGuys, what do you think?",
      "parentUuid": "8462800d_1e9149aa",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 125,
        "endChar": 54
      },
      "revId": "eed791fe48cf28ee871306b016c971d927a839e7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98efe812_5da0c4d7",
        "filename": "nfv_tempest_plugin/tests/scenario/manager_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 1133,
      "author": {
        "id": 1016438
      },
      "writtenOn": "2021-02-11T12:03:46Z",
      "side": 1,
      "message": "What will happen if there are several DPDK bonds, will the latest bond override the previous bond?",
      "range": {
        "startLine": 1133,
        "startChar": 23,
        "endLine": 1133,
        "endChar": 50
      },
      "revId": "eed791fe48cf28ee871306b016c971d927a839e7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a36e24f_92f6f02a",
        "filename": "nfv_tempest_plugin/tests/scenario/manager_utils.py",
        "patchSetId": 1
      },
      "lineNbr": 1133,
      "author": {
        "id": 1008672
      },
      "writtenOn": "2021-02-14T08:36:10Z",
      "side": 1,
      "message": "Yes, currently, last dpdk bond will override.\nI will mention a suggestion in the previous file to contunie the thread.",
      "parentUuid": "98efe812_5da0c4d7",
      "range": {
        "startLine": 1133,
        "startChar": 23,
        "endLine": 1133,
        "endChar": 50
      },
      "revId": "eed791fe48cf28ee871306b016c971d927a839e7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a06bbb77_065c8feb",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_lacp_usecases.py",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1008484
      },
      "writtenOn": "2021-02-10T20:04:34Z",
      "side": 1,
      "message": "I would advise the opposite,\nthe configuration is empty, by default, which means that most of the time \n self.retrieve_ovs_dpdk_bond_details() is called,\n\nI would consider removing configuration for the test, since it is learning bond details.\nunless you want to give the opportunity for non tripleo users,",
      "range": {
        "startLine": 141,
        "startChar": 11,
        "endLine": 141,
        "endChar": 20
      },
      "revId": "eed791fe48cf28ee871306b016c971d927a839e7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "628cff07_b3bbedcb",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_lacp_usecases.py",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1008672
      },
      "writtenOn": "2021-02-11T06:52:01Z",
      "side": 1,
      "message": "Take a look at the default configuration of the test:\n\n               default\u003d\u0027{\"bond_name\": \"\", \"bond_mode\": \"balance-tcp\",\u0027\n                       \u0027\"lacp_time\": \"fast\", \"lacp_status\": \"negotiated\",\u0027\n                       \u0027\"lacp_fallback_ab\": \"true\"}\u0027\n\nThe bond name is empty.\nIt means that self.retrieve_ovs_dpdk_bond_details() method will always be called.\nBut the method return only bond details - name, ports.\n\nOther options related to the test itself - lacp_time, lacp_fallback_ab, etc...\nI\u0027m can\u0027t get them from the bond options.\nSo I give the ability for the user to override them if needed.\n\nWould you like to hardcode them within the test?",
      "parentUuid": "a06bbb77_065c8feb",
      "range": {
        "startLine": 141,
        "startChar": 11,
        "endLine": 141,
        "endChar": 20
      },
      "revId": "eed791fe48cf28ee871306b016c971d927a839e7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e65aa5d_24463f30",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_lacp_usecases.py",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1008484
      },
      "writtenOn": "2021-02-11T07:45:58Z",
      "side": 1,
      "message": "I would advise \"bond_name\": \"\" not to be mentioned, you can add in the help itself\n\nAnd than in the test check if bond_name in config read it, it will avoid future errors and checks,",
      "parentUuid": "628cff07_b3bbedcb",
      "range": {
        "startLine": 141,
        "startChar": 11,
        "endLine": 141,
        "endChar": 20
      },
      "revId": "eed791fe48cf28ee871306b016c971d927a839e7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b441247_9cd2420d",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_lacp_usecases.py",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1008672
      },
      "writtenOn": "2021-02-11T09:31:18Z",
      "side": 1,
      "message": "I gave it as empty for the easy of use.\nThe user, if need to use it, will know from one look what needs to be provided instead of diving into the code.\nOtherwise, some of the parameters will be defined and some not.",
      "parentUuid": "6e65aa5d_24463f30",
      "range": {
        "startLine": 141,
        "startChar": 11,
        "endLine": 141,
        "endChar": 20
      },
      "revId": "eed791fe48cf28ee871306b016c971d927a839e7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42133501_ccec40ec",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_lacp_usecases.py",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1008484
      },
      "writtenOn": "2021-02-11T11:27:00Z",
      "side": 1,
      "message": "let us here others. BTW, upstream this answer will not pass.\nLets hear others",
      "parentUuid": "5b441247_9cd2420d",
      "range": {
        "startLine": 141,
        "startChar": 11,
        "endLine": 141,
        "endChar": 20
      },
      "revId": "eed791fe48cf28ee871306b016c971d927a839e7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85b9e2da_bae8c5e1",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_lacp_usecases.py",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1016438
      },
      "writtenOn": "2021-02-11T12:03:46Z",
      "side": 1,
      "message": "My comment regarding empty variables is mentioned in previous file.\n\nAssuming we know the bond name, we could also try to fetch the LACP configuration associated to it no? So we potentially may not need to explicitly look for LACP configuration if it is not required. This may sound counter-productive but maybe the deployment test could be at the basic form just testing if LACP is defined and if required will also verify LACP configuration.",
      "parentUuid": "42133501_ccec40ec",
      "range": {
        "startLine": 141,
        "startChar": 11,
        "endLine": 141,
        "endChar": 20
      },
      "revId": "eed791fe48cf28ee871306b016c971d927a839e7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "655b0a2a_b8069436",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_lacp_usecases.py",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 1008672
      },
      "writtenOn": "2021-02-14T08:36:10Z",
      "side": 1,
      "message": "So you mean to check for these options within the dpdk bonds:\n\nDpdkBondInterfaceOvsOptions: \"bond_mode\u003dbalance-tcp lacp\u003dactive other_config:lacp-time\u003dfast other-config:lacp-fallback-ab\u003dtrue\"\n\nAnd if exists, to test the lacp.\nThat\u0027s a good point.",
      "parentUuid": "85b9e2da_bae8c5e1",
      "range": {
        "startLine": 141,
        "startChar": 11,
        "endLine": 141,
        "endChar": 20
      },
      "revId": "eed791fe48cf28ee871306b016c971d927a839e7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}