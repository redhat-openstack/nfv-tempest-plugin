{
  "comments": [
    {
      "key": {
        "uuid": "7e2de69a_5c998d12",
        "filename": "docs/tests_config.yml.sample",
        "patchSetId": 8
      },
      "lineNbr": 118,
      "author": {
        "id": 1010167
      },
      "writtenOn": "2019-06-03T12:26:31Z",
      "side": 1,
      "message": "Why do we need separate flavor for this test?",
      "revId": "54c42e337470256f13bf4bbf00c2152796488075",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40a682a8_0e5d5b23",
        "filename": "docs/tests_config.yml.sample",
        "patchSetId": 8
      },
      "lineNbr": 200,
      "author": {
        "id": 1010167
      },
      "writtenOn": "2019-06-03T12:26:31Z",
      "side": 1,
      "message": "I am still confused on the why do we need aggregate for CI tests? Do we have multiple roles with different configuration?\n\nI understand it is good to have, but I am failing to see if there is a real need.",
      "range": {
        "startLine": 200,
        "startChar": 4,
        "endLine": 200,
        "endChar": 14
      },
      "revId": "54c42e337470256f13bf4bbf00c2152796488075",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f22f61b_b80dee07",
        "filename": "nfv_tempest_plugin/tests/scenario/test_nfv_advanced_usecases.py",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 1010167
      },
      "writtenOn": "2019-06-03T12:26:31Z",
      "side": 1,
      "message": "It would good if the numa aware network is passed for the this server creation and ensure that the server is created in the correct numa, by verifying the xml. If required it can be taken as a separate test, which will be basic testing of numa-aware feature. And a separate test for failure on same numa0 node. And another test for success on numa1 (when numa0 is full).",
      "revId": "54c42e337470256f13bf4bbf00c2152796488075",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}